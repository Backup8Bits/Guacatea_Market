version: "3.8"

services:

    db:
        image: postgres:13-alpine
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 30s
            timeout: 10s
            retries: 5
        ports:
            - 5432:5432
        networks:
            - flask-network
        environment:
            POSTGRES_USER: guacatea
            POSTGRES_PASSWORD: guacatea
            POSTGRES_DB: market
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data

    app:
        build: web
        restart: always
        ports:
            - "${FLASK_RUN_PORT:-5000}:${FLASK_RUN_PORT:-5000}"
        depends_on:
            - db
            - adminer
        environment:
            - FLASK_ENV=production #Set this with "production" for deploy
            - FLASK_DEBUG=0 #Set this to 0 for production
            - PYTHONUNBUFFERED=1
            - FLASK_APP=run.py
        networks:
            - flask-network


    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - flask-network

    proxy:
        image: nginx
        restart: always
        volumes:
            - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
            - ./proxy/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
        networks:
            - flask-network
volumes:
    postgres-db-volume:

networks:
    flask-network:
